{"version":3,"sources":["ListLi.js"],"names":["require","h","getAriaLabelOfCheckbox","props","type","isChecked","i18n","name","title","module","exports","className","toggleCheckbox","id","isDisabled","itemIconEl","showTitles","handleFolderClick"],"mappings":"eAAcA,OAAO,CAAC,QAAD,C;IAAbC,C,YAAAA,C;;AAER,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;AACxC,MAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;AAC3B,QAAID,KAAK,CAACE,SAAV,EAAqB;AACnB,aAAOF,KAAK,CAACG,IAAN,CAAW,iCAAX,EAA8C;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,OAA9C,CAAP;AACD,KAFD,MAEO;AACL,aAAOL,KAAK,CAACG,IAAN,CAAW,+BAAX,EAA4C;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,OAA5C,CAAP;AACD;AACF,GAND,MAMO;AACL,QAAIL,KAAK,CAACE,SAAV,EAAqB;AACnB,aAAOF,KAAK,CAACG,IAAN,CAAW,mBAAX,EAAgC;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,OAAhC,CAAP;AACD,KAFD,MAEO;AACL,aAAOL,KAAK,CAACG,IAAN,CAAW,iBAAX,EAA8B;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,OAA9B,CAAP;AACD;AACF;AACF,CAdD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACP,KAAD,EAAW;AAC1B,SACE;AAAI,IAAA,KAAK,EAAEA,KAAK,CAACQ;AAAjB,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,2DAAwDR,KAAK,CAACE,SAAN,GAAkB,mDAAlB,GAAwE,EAAhI,CAFP;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACS,cAHjB,CAIE;AAJF;AAKE,IAAA,EAAE,EAAET,KAAK,CAACU,EALZ;AAME,IAAA,IAAI,EAAC,QANP;AAOE,kBAAYX,sBAAsB,CAACC,KAAD,CAPpC;AAQE,qBAAeA,KAAK,CAACE,SARvB;AASE,qBAAeF,KAAK,CAACW,UATvB;AAUE;AAVF,IADF,EAcGX,KAAK,CAACC,IAAN,KAAe,MAAf,GACC;AACA;AAAO,IAAA,GAAG,EAAED,KAAK,CAACU,EAAlB;AAAsB,IAAA,SAAS,EAAC;AAAhC,KACGV,KAAK,CAACY,UADT,EAEGZ,KAAK,CAACa,UAAN,IAAoBb,KAAK,CAACK,KAF7B,CAFD,GAOC;AACA;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,6CAFR;AAGE,IAAA,OAAO,EAAEL,KAAK,CAACc,iBAHjB;AAIE,kBAAYd,KAAK,CAACG,IAAN,CAAW,iBAAX,EAA8B;AAAEC,MAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,KAA9B;AAJd,KAMGL,KAAK,CAACY,UANT,EAOGZ,KAAK,CAACa,UAAN,IAAoB,gBAAOb,KAAK,CAACK,KAAb,CAPvB,CAtBJ,CADF;AAmCD,CApCD","sourcesContent":["const { h } = require('preact')\n\nconst getAriaLabelOfCheckbox = (props) => {\n  if (props.type === 'folder') {\n    if (props.isChecked) {\n      return props.i18n('unselectAllFilesFromFolderNamed', { name: props.title })\n    } else {\n      return props.i18n('selectAllFilesFromFolderNamed', { name: props.title })\n    }\n  } else {\n    if (props.isChecked) {\n      return props.i18n('unselectFileNamed', { name: props.title })\n    } else {\n      return props.i18n('selectFileNamed', { name: props.title })\n    }\n  }\n}\n\n// if folder:\n//   + checkbox (selects all files from folder)\n//   + folder name (opens folder)\n// if file:\n//   + checkbox (selects file)\n//   + file name (selects file)\nmodule.exports = (props) => {\n  return (\n    <li class={props.className}>\n      <button\n        type=\"button\"\n        class={`uppy-u-reset uppy-ProviderBrowserItem-fakeCheckbox ${props.isChecked ? 'uppy-ProviderBrowserItem-fakeCheckbox--is-checked' : ''}`}\n        onClick={props.toggleCheckbox}\n        // for the <label/>\n        id={props.id}\n        role=\"option\"\n        aria-label={getAriaLabelOfCheckbox(props)}\n        aria-selected={props.isChecked}\n        aria-disabled={props.isDisabled}\n        data-uppy-super-focusable\n      />\n\n      {props.type === 'file' ? (\n        // label for a checkbox\n        <label for={props.id} className=\"uppy-u-reset uppy-ProviderBrowserItem-inner\">\n          {props.itemIconEl}\n          {props.showTitles && props.title}\n        </label>\n      ) : (\n        // button to open a folder\n        <button\n          type=\"button\"\n          class=\"uppy-u-reset uppy-ProviderBrowserItem-inner\"\n          onclick={props.handleFolderClick}\n          aria-label={props.i18n('openFolderNamed', { name: props.title })}\n        >\n          {props.itemIconEl}\n          {props.showTitles && <span>{props.title}</span>}\n        </button>\n      )}\n    </li>\n  )\n}\n"]}