{"version":3,"sources":["SharedHandler.js"],"names":["module","exports","plugin","filterItems","bind","toggleCheckbox","isChecked","loaderWrapper","items","state","getPluginState","filterInput","filter","folder","name","toLowerCase","indexOf","e","file","stopPropagation","preventDefault","currentTarget","focus","folders","files","concat","lastCheckbox","shiftKey","currentSelection","prevIndex","currentIndex","slice","setPluginState","item","id","some","promise","then","catch_","result","loading","catch","err"],"mappings":"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","sourcesContent":["module.exports = class SharedHandler {\n  constructor (plugin) {\n    this.plugin = plugin\n    this.filterItems = this.filterItems.bind(this)\n    this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    this.isChecked = this.isChecked.bind(this)\n    this.loaderWrapper = this.loaderWrapper.bind(this)\n  }\n\n  filterItems (items) {\n    const state = this.plugin.getPluginState()\n    if (!state.filterInput || state.filterInput === '') {\n      return items\n    }\n    return items.filter((folder) => {\n      return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1\n    })\n  }\n\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one.\n   */\n  toggleCheckbox (e, file) {\n    e.stopPropagation()\n    e.preventDefault()\n    e.currentTarget.focus()\n    const { folders, files } = this.plugin.getPluginState()\n    const items = this.filterItems(folders.concat(files))\n\n    // Shift-clicking selects a single consecutive list of items\n    // starting at the previous click and deselects everything else.\n    if (this.lastCheckbox && e.shiftKey) {\n      let currentSelection\n      const prevIndex = items.indexOf(this.lastCheckbox)\n      const currentIndex = items.indexOf(file)\n      if (prevIndex < currentIndex) {\n        currentSelection = items.slice(prevIndex, currentIndex + 1)\n      } else {\n        currentSelection = items.slice(currentIndex, prevIndex + 1)\n      }\n      this.plugin.setPluginState({ currentSelection })\n      return\n    }\n\n    this.lastCheckbox = file\n    const { currentSelection } = this.plugin.getPluginState()\n    if (this.isChecked(file)) {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.filter((item) => item.id !== file.id)\n      })\n    } else {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.concat([file])\n      })\n    }\n  }\n\n  isChecked (file) {\n    const { currentSelection } = this.plugin.getPluginState()\n    // comparing id instead of the file object, because the reference to the object\n    // changes when we switch folders, and the file list is updated\n    return currentSelection.some((item) => item.id === file.id)\n  }\n\n  loaderWrapper (promise, then, catch_) {\n    promise\n      .then((result) => {\n        this.plugin.setPluginState({ loading: false })\n        then(result)\n      }).catch((err) => {\n        this.plugin.setPluginState({ loading: false })\n        catch_(err)\n      })\n    this.plugin.setPluginState({ loading: true })\n  }\n}\n"]}